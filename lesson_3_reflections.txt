When would you want to create a remote repository rather than keeping all your
work local?

  When I want to share my work with others or have the possibility for others
  to easily contribute.

Why might you want to always pull changes manually rather than have Git
automatically stay up-to-date with your remote repository?

  Because someone else might make a change to the remote repository that you
  would likely want to review before adding to your files.

Describe the difference between forks, clones, and branches. When would you use
one instead of another?

  Clone copies the contents of a Git repository. Fork also copies a Git
  repository, but within GitHub (i.e., fork copies a repository already on
  GitHub to a new repository on GitHub; with clone you can copy a repository to
  your local machine). A branch occurs within a repository; it enables a
  "new version" of the code while leaving intact versions already in the
  repository.

What is the benefit of having a copy of the last known state of the remote
stored locally?

  You can review how the last known state of the remote differs from your
  current local branch without having to be connected to the internet and
  without having to combine the remote and the local branch.

How would you collaborate without using Git or GitHub? What would be easier, 
and what would be harder?

  I suppose my collaborators and I would send files back and forth via email or
  upload them to some cloud storage system like Dropbox. This would be
  easier in one sense: I already know how to do it. There's no learning
  curve like with Git or GitHub. However, it would be harder to keep track of
  changes, to make sure the project doesn't break, and to make sure all
  collaborators always have access to the most recent versions. I suppose this
  difficulty would increase drastically with the number of collaborators.
